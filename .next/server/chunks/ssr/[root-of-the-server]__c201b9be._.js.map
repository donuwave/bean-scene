{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/shared/config/theme.ts"],"sourcesContent":["import { createTheme, responsiveFontSizes } from '@mui/material/styles';\n\nconst baseOptions = {\n  typography: {\n    fontFamily: '\"Jost\", sans-serif',\n  },\n  shape: {\n    borderRadius: 8,\n    button: {\n      textTransform: 'capitalize',\n    },\n  },\n  spacing: 4,\n};\n\nlet lightTheme = createTheme({\n  ...baseOptions,\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#131118',\n      contrastText: '#FFFFFF',\n      dark: '#423e4c',\n    },\n    secondary: {\n      main: '#A4A1AA',\n    },\n    background: {\n      default: '#FFFFFF',\n    },\n  },\n});\n\nlet darkTheme = createTheme({\n  ...baseOptions,\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#8b00dc',\n      contrastText: '#e10c0c',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n    background: {\n      default: '#040404',\n      paper: '#ffffff',\n    },\n  },\n});\n\nlightTheme = responsiveFontSizes(lightTheme);\ndarkTheme = responsiveFontSizes(darkTheme);\n\nexport { darkTheme, lightTheme };\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,cAAc;IAClB,YAAY;QACV,YAAY;IACd;IACA,OAAO;QACL,cAAc;QACd,QAAQ;YACN,eAAe;QACjB;IACF;IACA,SAAS;AACX;AAEA,IAAI,aAAa,CAAA,GAAA,2MAAA,CAAA,cAAW,AAAD,EAAE;IAC3B,GAAG,WAAW;IACd,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;YACN,cAAc;YACd,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;QACA,YAAY;YACV,SAAS;QACX;IACF;AACF;AAEA,IAAI,YAAY,CAAA,GAAA,2MAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,GAAG,WAAW;IACd,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;YACN,cAAc;QAChB;QACA,WAAW;YACT,MAAM;QACR;QACA,YAAY;YACV,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEA,aAAa,CAAA,GAAA,2NAAA,CAAA,sBAAmB,AAAD,EAAE;AACjC,YAAY,CAAA,GAAA,2NAAA,CAAA,sBAAmB,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/shared/config/index.ts"],"sourcesContent":["export * from './theme';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/entities/user-settings/lib/getTheme.ts"],"sourcesContent":["import { darkTheme, lightTheme } from '@/shared/config';\n\nimport { ThemeVariants } from '../model/user-settings.store.types';\n\nexport const getTheme = (theme: ThemeVariants) => {\n  if (theme === 'dark') return darkTheme;\n  if (theme === 'light') return lightTheme;\n\n  return lightTheme;\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAIO,MAAM,WAAW,CAAC;IACvB,IAAI,UAAU,QAAQ,OAAO,gIAAA,CAAA,YAAS;IACtC,IAAI,UAAU,SAAS,OAAO,gIAAA,CAAA,aAAU;IAExC,OAAO,gIAAA,CAAA,aAAU;AACnB","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/entities/user-settings/model/user-settings.store.ts"],"sourcesContent":["import { create } from 'zustand/react';\n\nimport { ThemeVariants, UserSettings } from './user-settings.store.types';\n\nexport const useUserSettings = create<UserSettings>((set) => ({\n  theme: 'light',\n  changeTheme: (theme: ThemeVariants) => set(() => ({ theme })),\n}));\n"],"names":[],"mappings":";;;AAAA;;AAIO,MAAM,kBAAkB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAgB,CAAC,MAAQ,CAAC;QAC5D,OAAO;QACP,aAAa,CAAC,QAAyB,IAAI,IAAM,CAAC;oBAAE;gBAAM,CAAC;IAC7D,CAAC","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/entities/user-settings/index.ts"],"sourcesContent":["export * from './lib/getTheme';\n\nexport * from './model/user-settings.store';\nexport * from './model/user-settings.store.types';\n"],"names":[],"mappings":";AAAA;AAEA;AACA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///Users/donu/frontend/bean-scene/src/app/%28providers%29/MuiProvider.tsx"],"sourcesContent":["'use client';\n\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport React, { FC, PropsWithChildren } from 'react';\n\nimport { getTheme, useUserSettings } from '@/entities/user-settings';\n\nexport const MuiProvider: FC<PropsWithChildren> = ({ children }) => {\n  const settings = useUserSettings();\n  const theme = getTheme(settings.theme);\n\n  return <AppProvider theme={theme}>{children}</AppProvider>;\n};\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAAA;AAAA;AALA;;;;AAOO,MAAM,cAAqC,CAAC,EAAE,QAAQ,EAAE;IAC7D,MAAM,WAAW,CAAA,GAAA,yKAAA,CAAA,kBAAe,AAAD;IAC/B,MAAM,QAAQ,CAAA,GAAA,sJAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,KAAK;IAErC,qBAAO,8OAAC,sKAAA,CAAA,cAAW;QAAC,OAAO;kBAAQ;;;;;;AACrC","debugId":null}}]
}